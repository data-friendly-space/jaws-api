version: '3'

services:
  users-db:
    image: postgres
    container_name: jaws-users-db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${USERS_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${USERS_DATABASE_PASSWORD}
      - POSTGRES_DB=${USERS_DATABASE_NAME}
    ports:
      - 5432:${USERS_DATABASE_PORT}
    volumes:
      - users_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USERS_DATABASE_USERNAME} -d ${USERS_DATABASE_NAME}"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 5s

  analysis-db:
    image: postgres
    container_name: jaws-analysis-db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${ANALYSIS_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${ANALYSIS_DATABASE_PASSWORD}
      - POSTGRES_DB=${ANALYSIS_DATABASE_NAME}
    ports:
      - 5433:${ANALYSIS_DATABASE_PORT}
    volumes:
      - analysis_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${ANALYSIS_DATABASE_USERNAME} -d ${ANALYSIS_DATABASE_NAME}"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 5s

  api:
    container_name: jaws-api
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
      - "8001:8001" #debugpy
    depends_on:
      users-db:
        condition: service_healthy
      analysis-db:
        condition: service_healthy
    volumes:
      - .:/opt/web


volumes: 
  users_data:
  analysis_data:
